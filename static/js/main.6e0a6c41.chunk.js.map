{"version":3,"sources":["actions.js","Add.js","Link.js","LinkContainer.js","Links.js","Task.js","VisibleTasks.js","VisibleTaskList.js","App.js","reducer.js","index.js"],"names":["ADD_TASK","REMOVE_TASK","TOGGLE_TASK","SET_VISIBILITY_FILTER","VisibilityFilters","nextTaskId","connect","props","input","Card","className","bg","Body","Form","onSubmit","e","text","preventDefault","value","trim","dispatch","type","id","ref","node","Button","Link","Nav","Item","eventKey","children","onClick","disabled","active","LinkContainer","state","ownProps","filter","visibilityFilter","Links","variant","defaultActiveKey","Task","style","textDecoration","completed","description","removeClick","VisibleTasks","Table","tasks","map","task","onTaskClick","getVisibleTasks","t","VisibleTaskList","toggleTask","removeTask","App","Navbar","Brand","Container","rootReducer","combineReducers","action","Object","assign","persistedState","serializedState","localStorage","getItem","JSON","parse","loadState","store","createStore","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e0a6c41.chunk.js","sourcesContent":["export const ADD_TASK = \"ADD_TASK\";\r\nexport const REMOVE_TASK = \"REMOVE_TASK\";\r\nexport const TOGGLE_TASK = \"TOGGLE_TASK\";\r\nexport const SET_VISIBILITY_FILTER = \"SET_VISIBILITY_FILTER\";\r\n\r\nexport const VisibilityFilters = {\r\n  SHOW_ALL: \"SHOW_ALL\",\r\n  SHOW_COMPLETED: \"SHOW_COMPLETED\",\r\n  SHOW_ACTIVE: \"SHOW_ACTIVE\",\r\n};\r\n\r\nlet nextTaskId = 0;\r\nexport function addTask(text) {\r\n  return {\r\n    type: ADD_TASK,\r\n    id: nextTaskId++,\r\n    text,\r\n  };\r\n}\r\n\r\nexport function toggleTask(id) {\r\n  return {\r\n    type: TOGGLE_TASK,\r\n    id,\r\n  };\r\n}\r\n\r\nexport function setVisibilityFilter(filter) {\r\n  return {\r\n    type: SET_VISIBILITY_FILTER,\r\n    filter,\r\n  };\r\n}\r\n\r\nexport function removeTask(id) {\r\n  return {\r\n    type: REMOVE_TASK,\r\n    id,\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTask } from \"./actions\";\r\n\r\nconst Add = (props) => {\r\n  let input;\r\n  return (\r\n    <>\r\n      <Card className=\"mb-5 mt-2\" bg=\"secondary\">\r\n        <Card.Body>\r\n          <Form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              if (!input.value.trim()) {\r\n                return;\r\n              }\r\n              props.dispatch(addTask(input.value));\r\n              input.value = \"\";\r\n            }}\r\n          >\r\n            <input\r\n              ref={(node) => {\r\n                input = node;\r\n              }}\r\n            />\r\n\r\n            <Button className=\"ml-5\" type=\"submit\">\r\n              Add Task{\" \"}\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect()(Add);\r\n","import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\nfunction Link(props) {\r\n  return (\r\n    <>\r\n      <Nav.Item>\r\n        <Nav.Link\r\n          eventKey={props.children}\r\n          onClick={() => props.onClick()}\r\n          disabled={props.active}\r\n        >\r\n          {props.children}\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Link;\r\n","import { connect } from \"react-redux\";\r\nimport { setVisibilityFilter } from \"./actions\";\r\nimport Link from \"./Link\";\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {\r\n    active: ownProps.filter === state.visibilityFilter,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch, ownProps) {\r\n  return {\r\n    onClick: () => {\r\n      dispatch(setVisibilityFilter(ownProps.filter));\r\n    },\r\n  };\r\n}\r\n\r\nconst LinkContainer = connect(mapStateToProps, mapDispatchToProps)(Link);\r\n\r\nexport default LinkContainer;\r\n","import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport LinkContainer from \"./LinkContainer\";\r\nimport { VisibilityFilters } from \"./actions\";\r\n\r\nfunction Links(props) {\r\n  return (\r\n    <>\r\n      <Nav variant=\"tabs\" defaultActiveKey=\"All\">\r\n        <LinkContainer filter={VisibilityFilters.SHOW_ALL}>All</LinkContainer>\r\n        <LinkContainer filter={VisibilityFilters.SHOW_ACTIVE}>\r\n          In progress...\r\n        </LinkContainer>\r\n        <LinkContainer filter={VisibilityFilters.SHOW_COMPLETED}>\r\n          Completed!\r\n        </LinkContainer>\r\n      </Nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Links;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction Task(props) {\r\n  return (\r\n    <tr>\r\n      <td>{props.id}</td>\r\n\r\n      <td>\r\n        <span\r\n          style={{\r\n            textDecoration: props.completed ? \"line-through\" : \"none\",\r\n          }}\r\n          onClick={props.onClick}\r\n        >\r\n          {props.description}\r\n        </span>\r\n      </td>\r\n\r\n      <td>\r\n        <Button variant=\"danger\" onClick={props.removeClick}>\r\n          remove\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Task from \"./Task\";\r\n\r\nfunction VisibleTasks(props) {\r\n  return (\r\n    <>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th> ID</th>\r\n            <th>Task</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.tasks.map((task) => (\r\n            <Task\r\n              key={task.id}\r\n              {...task}\r\n              onClick={() => props.onTaskClick(task.id)}\r\n              removeClick={() => props.removeClick(task.id)}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default VisibleTasks;\r\n","import { connect } from \"react-redux\";\r\nimport { toggleTask } from \"./actions\";\r\nimport { removeTask } from \"./actions\";\r\nimport VisibleTasks from \"./VisibleTasks\";\r\n\r\nfunction getVisibleTasks(tasks, filter) {\r\n  switch (filter) {\r\n    case \"SHOW_COMPLETED\":\r\n      return tasks.filter((t) => t.completed);\r\n    case \"SHOW_ACTIVE\":\r\n      return tasks.filter((t) => !t.completed);\r\n    case \"SHOW_ALL\":\r\n    default:\r\n      return tasks;\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    tasks: getVisibleTasks(state.tasks, state.visibilityFilter),\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onTaskClick: (id) => {\r\n      dispatch(toggleTask(id));\r\n    },\r\n    removeClick: (id) => {\r\n      dispatch(removeTask(id));\r\n    },\r\n  };\r\n}\r\n\r\nconst VisibleTaskList = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(VisibleTasks);\r\n\r\nexport default VisibleTaskList;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\nimport Add from \"./Add\";\nimport Links from \"./Links\";\nimport VisibleTaskList from \"./VisibleTaskList\";\n\nconst App = (props) => {\n  return (\n    <>\n      <Navbar bg=\"secondary\" variant=\"dark\">\n        <Navbar.Brand>To Do List</Navbar.Brand>\n      </Navbar>\n      <Container>\n        <Add />\n        <Links />\n        <VisibleTaskList />\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import {\r\n  VisibilityFilters,\r\n  ADD_TASK,\r\n  REMOVE_TASK,\r\n  TOGGLE_TASK,\r\n  SET_VISIBILITY_FILTER,\r\n} from \"./actions.js\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nfunction visibilityFilterReducer(state = VisibilityFilters.SHOW_ALL, action) {\r\n  switch (action.type) {\r\n    case SET_VISIBILITY_FILTER:\r\n      return action.filter;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction taskReducer(state = [], action) {\r\n  switch (action.type) {\r\n    case ADD_TASK:\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          description: action.text,\r\n          completed: false,\r\n        },\r\n      ];\r\n    case REMOVE_TASK:\r\n      return state.filter((value) => {\r\n        return action.id !== value.id;\r\n      });\r\n    case TOGGLE_TASK:\r\n      return state.map((task) => {\r\n        if (task.id === action.id) {\r\n          return Object.assign({}, task, {\r\n            completed: !task.completed,\r\n          });\r\n        }\r\n        return task;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const rootReducer = combineReducers({\r\n  visibilityFilter: visibilityFilterReducer,\r\n  tasks: taskReducer,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { rootReducer } from \"./reducer\";\n\nfunction loadState() {\n  const serializedState = localStorage.getItem(\"state\");\n  if (!serializedState) {\n    return undefined;\n  }\n  return JSON.parse(serializedState);\n}\n\nconst persistedState = loadState();\nconst store = createStore(rootReducer, persistedState);\n\nfunction saveState(state) {\n  const serializedState = JSON.stringify(state);\n  localStorage.setItem(\"state\", serializedState);\n}\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}